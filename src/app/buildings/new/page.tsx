// src/app/buildings/new/page.tsx (–æ–±–Ω–æ–≤–ª–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è —Å –∞–≤—Ç–æ–∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ–º)
'use client'

import { useState, useEffect } from 'react'
import { useRouter } from 'next/navigation'
import { supabase } from '../../../lib/supabase'
import ImageUploader from '../../../components/ImageUploader'
import LocationPicker from '../../../components/LocationPicker'
import Header from '../../../components/Header'

// ... (–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã –∏ –∫–æ–Ω—Å—Ç–∞–Ω—Ç—ã –æ—Å—Ç–∞—é—Ç—Å—è —Ç–µ–º–∏ –∂–µ)
interface BuildingFormData {
  name: string
  architect: string
  year_built: number | null
  architectural_style: string
  building_type: string
  description: string
  address: string
  city: string
  country: string
  latitude: number | null
  longitude: number | null
  website_url: string
  entry_fee: string
  conservation_status: string
  accessibility_info: string
  historical_significance: string
  images: string[]
}

const ARCHITECTURAL_STYLES = [
  '–ì–æ—Ç–∏–∫–∞', '–†–µ–Ω–µ—Å—Å–∞–Ω—Å', '–ë–∞—Ä–æ–∫–∫–æ', '–ö–ª–∞—Å—Å–∏—Ü–∏–∑–º', '–ê–º–ø–∏—Ä', '–ú–æ–¥–µ—Ä–Ω',
  '–ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–∏–≤–∏–∑–º', '–§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–∏–∑–º', '–ú–æ–¥–µ—Ä–Ω–∏–∑–º', '–ë—Ä—É—Ç–∞–ª–∏–∑–º',
  '–ü–æ—Å—Ç–º–æ–¥–µ—Ä–Ω–∏–∑–º', '–î–µ–∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–∏–≤–∏–∑–º', '–•–∞–π-—Ç–µ–∫', '–ú–∏–Ω–∏–º–∞–ª–∏–∑–º',
  '–≠–∫–ª–µ–∫—Ç–∏–∫–∞', '–ù–µ–æ–∫–ª–∞—Å—Å–∏—Ü–∏–∑–º', '–°–æ–≤—Ä–µ–º–µ–Ω–Ω–∞—è –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞', '–î—Ä—É–≥–æ–µ'
]

const BUILDING_TYPES = [
  '–ñ–∏–ª–æ–π –¥–æ–º', '–û—Ñ–∏—Å–Ω–æ–µ –∑–¥–∞–Ω–∏–µ', '–¢–æ—Ä–≥–æ–≤—ã–π —Ü–µ–Ω—Ç—Ä', '–ú—É–∑–µ–π', '–¢–µ–∞—Ç—Ä',
  '–¶–µ—Ä–∫–æ–≤—å', '–ú–µ—á–µ—Ç—å', '–°–∏–Ω–∞–≥–æ–≥–∞', '–®–∫–æ–ª–∞', '–£–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç', '–ë–æ–ª—å–Ω–∏—Ü–∞',
  '–í–æ–∫–∑–∞–ª', '–ê—ç—Ä–æ–ø–æ—Ä—Ç', '–ú–æ—Å—Ç', '–ë–∞—à–Ω—è', '–ó–∞–≤–æ–¥', '–°–∫–ª–∞–¥', '–ü–∞–º—è—Ç–Ω–∏–∫', '–î—Ä—É–≥–æ–µ'
]

const CONSERVATION_STATUSES = [
  { value: '', label: '–ù–µ —É–∫–∞–∑–∞–Ω' },
  { value: 'unesco', label: '–û–±—ä–µ–∫—Ç –Æ–ù–ï–°–ö–û' },
  { value: 'national', label: '–ù–∞—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π –ø–∞–º—è—Ç–Ω–∏–∫' },
  { value: 'regional', label: '–†–µ–≥–∏–æ–Ω–∞–ª—å–Ω—ã–π –ø–∞–º—è—Ç–Ω–∏–∫' },
  { value: 'local', label: '–ú–µ—Å—Ç–Ω—ã–π –ø–∞–º—è—Ç–Ω–∏–∫' },
  { value: 'none', label: '–ù–µ –æ—Ö—Ä–∞–Ω—è–µ—Ç—Å—è' }
]

export default function AddBuildingPage() {
  const router = useRouter()
  const [currentStep, setCurrentStep] = useState(1)
  const [loading, setLoading] = useState(false)
  const [error, setError] = useState<string | null>(null)
  const [user, setUser] = useState<any>(null)
  
  const [formData, setFormData] = useState<BuildingFormData>({
    name: '',
    architect: '',
    year_built: null,
    architectural_style: '',
    building_type: '',
    description: '',
    address: '',
    city: 'Berlin',
    country: 'Germany',
    latitude: null,
    longitude: null,
    website_url: '',
    entry_fee: '',
    conservation_status: '',
    accessibility_info: '',
    historical_significance: '',
    images: []
  })

  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
  useEffect(() => {
    const checkAuth = async () => {
      const { data: { user }, error } = await supabase.auth.getUser()
      if (user) {
        setUser(user)
      } else {
        router.push('/')
      }
    }
    checkAuth()
  }, [router])

  // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–æ–ª–µ–π —Ñ–æ—Ä–º—ã
  const updateField = (field: keyof BuildingFormData, value: any) => {
    setFormData(prev => ({ ...prev, [field]: value }))
  }

  // –û–±—Ä–∞–±–æ—Ç–∫–∞ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏—è —Å –∫–∞—Ä—Ç—ã
  const handleLocationSelect = (lat: number, lng: number, address?: string) => {
    setFormData(prev => ({
      ...prev,
      latitude: lat,
      longitude: lng,
      address: address || prev.address
    }))
  }

  // –ù–û–í–û–ï: –û–±—Ä–∞–±–æ—Ç–∫–∞ –∞–≤—Ç–æ–∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è –∞–¥—Ä–µ—Å–∞, –≥–æ—Ä–æ–¥–∞ –∏ —Å—Ç—Ä–∞–Ω—ã
  const handleAddressUpdate = (address: string, city: string, country: string) => {
    setFormData(prev => ({
      ...prev,
      address: address,
      city: city || prev.city,
      country: country || prev.country
    }))
  }

  // –û—Å—Ç–∞–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –æ—Å—Ç–∞—é—Ç—Å—è —Ç–µ–º–∏ –∂–µ...
  const validateStep = (step: number): boolean => {
    switch (step) {
      case 1:
        return formData.latitude !== null && 
               formData.longitude !== null &&
               formData.city.trim() !== '' &&
               formData.country.trim() !== ''
      case 2:
        return formData.name.trim() !== '' && 
               formData.architect.trim() !== '' && 
               formData.architectural_style !== '' &&
               formData.building_type !== ''
      case 3:
        return formData.images.length > 0
      default:
        return true
    }
  }

  const nextStep = () => {
    if (validateStep(currentStep)) {
      setCurrentStep(prev => prev + 1)
      setError(null)
    } else {
      if (currentStep === 1) {
        setError('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ –Ω–∞ –∫–∞—Ä—Ç–µ –∏ —É–∫–∞–∂–∏—Ç–µ –≥–æ—Ä–æ–¥/—Å—Ç—Ä–∞–Ω—É')
      } else if (currentStep === 2) {
        setError('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ, –∞—Ä—Ö–∏—Ç–µ–∫—Ç–æ—Ä–∞, —Å—Ç–∏–ª—å –∏ —Ç–∏–ø –∑–¥–∞–Ω–∏—è')
      } else if (currentStep === 3) {
        setError('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–≥—Ä—É–∑–∏—Ç–µ —Ö–æ—Ç—è –±—ã –æ–¥–Ω—É —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é')
      }
    }
  }

  const prevStep = () => {
    setCurrentStep(prev => prev - 1)
    setError(null)
  }

  const handleSubmit = async () => {
    if (!validateStep(1) || !validateStep(2) || !validateStep(3)) {
      setError('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è')
      return
    }

    if (!user) {
      setError('–ù–µ–æ–±—Ö–æ–¥–∏–º–æ –≤–æ–π—Ç–∏ –≤ —Å–∏—Å—Ç–µ–º—É')
      return
    }

    setLoading(true)
    setError(null)

    try {
      const buildingData = {
        name: formData.name.trim(),
        description: formData.description.trim() || null,
        architect: formData.architect.trim(),
        year_built: formData.year_built,
        architectural_style: formData.architectural_style,
        address: formData.address.trim() || null,
        city: formData.city.trim(),
        country: formData.country.trim(),
        latitude: formData.latitude,
        longitude: formData.longitude,
        image_url: formData.images[0] || null,
        image_urls: formData.images.length > 1 ? formData.images : null,
        website_url: formData.website_url.trim() || null,
        entry_fee: formData.entry_fee.trim() || null,
        accessibility_info: formData.accessibility_info.trim() || null,
        historical_significance: formData.historical_significance.trim() || null,
        building_type: formData.building_type,
        conservation_status: formData.conservation_status || null,
        created_by: user.id,
        verified: false,
        rating: null,
        review_count: 0,
        view_count: 0,
        created_at: new Date().toISOString(),
        updated_at: new Date().toISOString()
      }

      console.log('üíæ –°–æ—Ö—Ä–∞–Ω—è–µ–º –∑–¥–∞–Ω–∏–µ:', buildingData)

      const { data, error: dbError } = await supabase
        .from('buildings')
        .insert([buildingData])
        .select()
        .single()

      if (dbError) {
        console.error('‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è:', dbError)
        setError(`–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è: ${dbError.message}`)
        return
      }

      console.log('‚úÖ –ó–¥–∞–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–æ:', data)
      router.push(`/buildings/${data.id}`)

    } catch (error) {
      console.error('üí• –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞:', error)
      setError('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞')
    } finally {
      setLoading(false)
    }
  }

  if (!user) {
    return (
      <div className="min-h-screen bg-gray-50 flex items-center justify-center">
        <div className="text-center">
          <div className="animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600 mx-auto mb-4"></div>
          <p className="text-gray-600">–ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏...</p>
        </div>
      </div>
    )
  }

  return (
    <div className="min-h-screen bg-gray-50">
      <Header buildings={[]} />
      
      <main className="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
        {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ –∏ –ø—Ä–æ–≥—Ä–µ—Å—Å */}
        <div className="mb-8">
          <h1 className="text-3xl font-bold text-gray-900 mb-4">
            –î–æ–±–∞–≤–∏—Ç—å –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–Ω—ã–π –æ–±—ä–µ–∫—Ç
          </h1>
          
          {/* –ò–Ω–¥–∏–∫–∞—Ç–æ—Ä –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ */}
          <div className="flex items-center space-x-4 mb-6">
            {[1, 2, 3].map((step) => (
              <div key={step} className="flex items-center">
                <div className={`w-8 h-8 rounded-full flex items-center justify-center text-sm font-medium ${
                  currentStep >= step 
                    ? 'bg-blue-600 text-white' 
                    : 'bg-gray-200 text-gray-600'
                }`}>
                  {step}
                </div>
                {step < 3 && (
                  <div className={`w-16 h-1 ml-4 ${
                    currentStep > step ? 'bg-blue-600' : 'bg-gray-200'
                  }`} />
                )}
              </div>
            ))}
          </div>

          {/* –ù–∞–∑–≤–∞–Ω–∏—è —à–∞–≥–æ–≤ */}
          <div className="text-sm text-gray-600">
            {currentStep === 1 && "–®–∞–≥ 1: –ú–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ –∏ –∞–¥—Ä–µ—Å"}
            {currentStep === 2 && "–®–∞–≥ 2: –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è"}
            {currentStep === 3 && "–®–∞–≥ 3: –§–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –∏ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ"}
          </div>
        </div>

        {/* –§–æ—Ä–º–∞ */}
        <div className="bg-white rounded-xl shadow-sm border p-8">
          {/* –û—à–∏–±–∫–∏ */}
          {error && (
            <div className="mb-6 p-4 bg-red-50 border border-red-200 rounded-lg">
              <div className="text-red-800">{error}</div>
            </div>
          )}

          {/* –®–∞–≥ 1: –ú–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ */}
          {currentStep === 1 && (
            <div className="space-y-6">
              <h2 className="text-xl font-semibold text-gray-900 mb-6">
                –ì–¥–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –∑–¥–∞–Ω–∏–µ?
              </h2>

              {/* –ì–æ—Ä–æ–¥ –∏ —Å—Ç—Ä–∞–Ω–∞ - —Ç–µ–ø–µ—Ä—å –∞–≤—Ç–æ–∑–∞–ø–æ–ª–Ω—è—é—Ç—Å—è */}
              <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
                <div>
                  <label className="block text-sm font-medium text-gray-700 mb-2">
                    –ì–æ—Ä–æ–¥ *
                  </label>
                  <input
                    type="text"
                    value={formData.city}
                    onChange={(e) => updateField('city', e.target.value)}
                    placeholder="Berlin"
                    className="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
                  />
                  <p className="text-xs text-gray-500 mt-1">–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∑–∞–ø–æ–ª–Ω—è–µ—Ç—Å—è –ø—Ä–∏ –≤—ã–±–æ—Ä–µ –Ω–∞ –∫–∞—Ä—Ç–µ</p>
                </div>

                <div>
                  <label className="block text-sm font-medium text-gray-700 mb-2">
                    –°—Ç—Ä–∞–Ω–∞ *
                  </label>
                  <input
                    type="text"
                    value={formData.country}
                    onChange={(e) => updateField('country', e.target.value)}
                    placeholder="Germany"
                    className="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
                  />
                  <p className="text-xs text-gray-500 mt-1">–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∑–∞–ø–æ–ª–Ω—è–µ—Ç—Å—è –ø—Ä–∏ –≤—ã–±–æ—Ä–µ –Ω–∞ –∫–∞—Ä—Ç–µ</p>
                </div>
              </div>

              {/* –ê–¥—Ä–µ—Å */}
              <div>
                <label className="block text-sm font-medium text-gray-700 mb-2">
                  –ê–¥—Ä–µ—Å
                </label>
                <input
                  type="text"
                  value={formData.address}
                  onChange={(e) => updateField('address', e.target.value)}
                  placeholder="Panoramastra√üe 1A"
                  className="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
                />
                <p className="text-xs text-gray-500 mt-1">–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∑–∞–ø–æ–ª–Ω—è–µ—Ç—Å—è –ø—Ä–∏ –ø–æ–∏—Å–∫–µ –∏–ª–∏ –≤—ã–±–æ—Ä–µ –Ω–∞ –∫–∞—Ä—Ç–µ</p>
              </div>

              {/* –ö–∞—Ä—Ç–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏—è - —Å –Ω–æ–≤—ã–º–∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—è–º–∏ */}
              <div>
                <LocationPicker
                  onLocationSelect={handleLocationSelect}
                  onAddressUpdate={handleAddressUpdate} // –ù–æ–≤—ã–π –∫–æ–ª–±—ç–∫ –¥–ª—è –∞–≤—Ç–æ–∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è
                  initialLocation={
                    formData.latitude && formData.longitude 
                      ? { lat: formData.latitude, lng: formData.longitude }
                      : undefined
                  }
                />
              </div>

              {/* –ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã */}
              {formData.latitude && formData.longitude && (
                <div className="bg-green-50 border border-green-200 rounded-lg p-4">
                  <p className="text-sm text-green-800">
                    ‚úÖ –ú–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ –≤—ã–±—Ä–∞–Ω–æ: {formData.latitude.toFixed(6)}, {formData.longitude.toFixed(6)}
                  </p>
                  <p className="text-xs text-green-700 mt-1">
                    {formData.city && formData.country && `üìç ${formData.city}, ${formData.country}`}
                  </p>
                </div>
              )}
            </div>
          )}

          {/* –®–∞–≥ 2: –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è */}
          {currentStep === 2 && (
            <div className="space-y-6">
              <h2 className="text-xl font-semibold text-gray-900 mb-6">
                –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∑–¥–∞–Ω–∏–∏
              </h2>

              <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
                {/* –ù–∞–∑–≤–∞–Ω–∏–µ */}
                <div className="md:col-span-2">
                  <label className="block text-sm font-medium text-gray-700 mb-2">
                    –ù–∞–∑–≤–∞–Ω–∏–µ –∑–¥–∞–Ω–∏—è *
                  </label>
                  <input
                    type="text"
                    value={formData.name}
                    onChange={(e) => updateField('name', e.target.value)}
                    placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: –ë–µ—Ä–ª–∏–Ω—Å–∫–∞—è —Ç–µ–ª–µ–±–∞—à–Ω—è"
                    className="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
                  />
                </div>

                {/* –ê—Ä—Ö–∏—Ç–µ–∫—Ç–æ—Ä */}
                <div>
                  <label className="block text-sm font-medium text-gray-700 mb-2">
                    –ê—Ä—Ö–∏—Ç–µ–∫—Ç–æ—Ä *
                  </label>
                  <input
                    type="text"
                    value={formData.architect}
                    onChange={(e) => updateField('architect', e.target.value)}
                    placeholder="–ò–º—è –∞—Ä—Ö–∏—Ç–µ–∫—Ç–æ—Ä–∞ –∏–ª–∏ –±—é—Ä–æ"
                    className="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
                  />
                </div>

                {/* –ì–æ–¥ –ø–æ—Å—Ç—Ä–æ–π–∫–∏ */}
                <div>
                  <label className="block text-sm font-medium text-gray-700 mb-2">
                    –ì–æ–¥ –ø–æ—Å—Ç—Ä–æ–π–∫–∏
                  </label>
                  <input
                    type="number"
                    value={formData.year_built || ''}
                    onChange={(e) => updateField('year_built', e.target.value ? parseInt(e.target.value) : null)}
                    placeholder="1969"
                    min="1000"
                    max={new Date().getFullYear()}
                    className="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
                  />
                </div>

                {/* –ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–Ω—ã–π —Å—Ç–∏–ª—å */}
                <div>
                  <label className="block text-sm font-medium text-gray-700 mb-2">
                    –ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–Ω—ã–π —Å—Ç–∏–ª—å *
                  </label>
                  <select
                    value={formData.architectural_style}
                    onChange={(e) => updateField('architectural_style', e.target.value)}
                    className="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
                  >
                    <option value="">–í—ã–±–µ—Ä–∏—Ç–µ —Å—Ç–∏–ª—å</option>
                    {ARCHITECTURAL_STYLES.map(style => (
                      <option key={style} value={style}>{style}</option>
                    ))}
                  </select>
                </div>

                {/* –¢–∏–ø –∑–¥–∞–Ω–∏—è */}
                <div>
                  <label className="block text-sm font-medium text-gray-700 mb-2">
                    –¢–∏–ø –∑–¥–∞–Ω–∏—è *
                  </label>
                  <select
                    value={formData.building_type}
                    onChange={(e) => updateField('building_type', e.target.value)}
                    className="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
                  >
                    <option value="">–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø</option>
                    {BUILDING_TYPES.map(type => (
                      <option key={type} value={type}>{type}</option>
                    ))}
                  </select>
                </div>
              </div>

              {/* –û–ø–∏—Å–∞–Ω–∏–µ */}
              <div>
                <label className="block text-sm font-medium text-gray-700 mb-2">
                  –û–ø–∏—Å–∞–Ω–∏–µ
                </label>
                <textarea
                  value={formData.description}
                  onChange={(e) => updateField('description', e.target.value)}
                  placeholder="–†–∞—Å—Å–∫–∞–∂–∏—Ç–µ –æ–± –∏—Å—Ç–æ—Ä–∏–∏ –∑–¥–∞–Ω–∏—è, –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã—Ö –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç—è—Ö –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—ã..."
                  rows={4}
                  className="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
                />
              </div>
            </div>
          )}

          {/* –®–∞–≥ 3: –§–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –∏ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ */}
          {currentStep === 3 && (
            <div className="space-y-8">
              <div>
                <h2 className="text-xl font-semibold text-gray-900 mb-6">
                  –§–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –∑–¥–∞–Ω–∏—è
                </h2>
                
                <p className="text-gray-600 mb-4">
                  –ó–∞–≥—Ä—É–∑–∏—Ç–µ –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –∑–¥–∞–Ω–∏—è. –ü–µ—Ä–≤–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –±—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –∫–∞–∫ –≥–ª–∞–≤–Ω–æ–µ.
                </p>

                <ImageUploader
                  maxFiles={5}
                  folder="buildings"
                  onImagesChange={(urls) => updateField('images', urls)}
                  existingImages={formData.images}
                />

                {formData.images.length === 0 && (
                  <p className="text-sm text-red-600 mt-2">
                    * –ù–µ–æ–±—Ö–æ–¥–∏–º–æ –∑–∞–≥—Ä—É–∑–∏—Ç—å —Ö–æ—Ç—è –±—ã –æ–¥–Ω—É —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é
                  </p>
                )}
              </div>

              {/* –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è */}
              <div className="border-t pt-8">
                <h3 className="text-lg font-semibold text-gray-900 mb-6">
                  –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
                </h3>

                <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
                  {/* –í–µ–±-—Å–∞–π—Ç */}
                  <div>
                    <label className="block text-sm font-medium text-gray-700 mb-2">
                      –í–µ–±-—Å–∞–π—Ç
                    </label>
                    <input
                      type="url"
                      value={formData.website_url}
                      onChange={(e) => updateField('website_url', e.target.value)}
                      placeholder="https://example.com"
                      className="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
                    />
                  </div>

                  {/* –í—Ö–æ–¥–Ω–∞—è –ø–ª–∞—Ç–∞ */}
                  <div>
                    <label className="block text-sm font-medium text-gray-700 mb-2">
                      –í—Ö–æ–¥–Ω–∞—è –ø–ª–∞—Ç–∞
                    </label>
                    <input
                      type="text"
                      value={formData.entry_fee}
                      onChange={(e) => updateField('entry_fee', e.target.value)}
                      placeholder="–ë–µ—Å–ø–ª–∞—Ç–Ω–æ / ‚Ç¨10 / ‚Ç¨5 –ª—å–≥–æ—Ç–Ω—ã–π"
                      className="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
                    />
                  </div>

                  {/* –°—Ç–∞—Ç—É—Å –æ—Ö—Ä–∞–Ω—ã */}
                  <div className="md:col-span-2">
                    <label className="block text-sm font-medium text-gray-700 mb-2">
                      –°—Ç–∞—Ç—É—Å –æ—Ö—Ä–∞–Ω—ã
                    </label>
                    <select
                      value={formData.conservation_status}
                      onChange={(e) => updateField('conservation_status', e.target.value)}
                      className="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
                    >
                      {CONSERVATION_STATUSES.map(status => (
                        <option key={status.value} value={status.value}>{status.label}</option>
                      ))}
                    </select>
                  </div>
                </div>

                {/* –î–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å */}
                <div className="mt-6">
                  <label className="block text-sm font-medium text-gray-700 mb-2">
                    –î–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å
                  </label>
                  <textarea
                    value={formData.accessibility_info}
                    onChange={(e) => updateField('accessibility_info', e.target.value)}
                    placeholder="–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ –¥–ª—è –ª—é–¥–µ–π —Å –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω—ã–º–∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—è–º–∏"
                    rows={3}
                    className="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
                  />
                </div>

                {/* –ò—Å—Ç–æ—Ä–∏—á–µ—Å–∫–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ */}
                <div className="mt-6">
                  <label className="block text-sm font-medium text-gray-700 mb-2">
                    –ò—Å—Ç–æ—Ä–∏—á–µ—Å–∫–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
                  </label>
                  <textarea
                    value={formData.historical_significance}
                    onChange={(e) => updateField('historical_significance', e.target.value)}
                    placeholder="–†–∞—Å—Å–∫–∞–∂–∏—Ç–µ –æ–± –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–æ–π –≤–∞–∂–Ω–æ—Å—Ç–∏ –∑–¥–∞–Ω–∏—è, –∏–∑–≤–µ—Å—Ç–Ω—ã—Ö —Å–æ–±—ã—Ç–∏—è—Ö..."
                    rows={4}
                    className="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
                  />
                </div>
              </div>
            </div>
          )}

          {/* –ö–Ω–æ–ø–∫–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ */}
          <div className="flex justify-between items-center mt-8 pt-6 border-t">
            <button
              onClick={prevStep}
              disabled={currentStep === 1}
              className={`flex items-center px-6 py-2 rounded-lg font-medium transition-colors ${
                currentStep === 1
                  ? 'text-gray-400 cursor-not-allowed'
                  : 'text-gray-700 hover:text-gray-900 hover:bg-gray-50'
              }`}
            >
              ‚Üê –ù–∞–∑–∞–¥
            </button>

            <div className="text-sm text-gray-500">
              –®–∞–≥ {currentStep} –∏–∑ 3
            </div>

            <div className="flex space-x-4">
              {currentStep < 3 ? (
                <button
                  onClick={nextStep}
                  className="flex items-center px-6 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 font-medium transition-colors"
                >
                  –î–∞–ª–µ–µ ‚Üí
                </button>
              ) : (
                <button
                  onClick={handleSubmit}
                  disabled={loading}
                  className="flex items-center px-8 py-2 bg-green-600 text-white rounded-lg hover:bg-green-700 font-medium disabled:opacity-50 disabled:cursor-not-allowed transition-colors"
                >
                  {loading ? (
                    <>
                      <div className="animate-spin rounded-full h-4 w-4 border-b-2 border-white mr-2"></div>
                      –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ...
                    </>
                  ) : (
                    '–°–æ–∑–¥–∞—Ç—å –∑–¥–∞–Ω–∏–µ'
                  )}
                </button>
              )}
            </div>
          </div>
        </div>
      </main>
    </div>
  )
}